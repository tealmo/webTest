<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>cn.creditall</groupId>
	<artifactId>WebTest</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>WebTest</name>
	<url>http://maven.apache.org</url>
	<!--maven依赖不同的jar包 -->
	<dependencies>
		<!--依赖 testNG -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>6.11</version>
			<scope>test</scope>
		</dependency>
		<!-- selenium -->
		<dependency>
			<groupId>org.seleniumhq.selenium</groupId>
			<artifactId>selenium-java</artifactId>
			<version>3.5.2</version>
		</dependency>
		<!-- jxl -->
		<dependency>
			<groupId>net.sourceforge.jexcelapi</groupId>
			<artifactId>jxl</artifactId>
			<version>2.6.12</version>
		</dependency>

		<!-- 依赖reportNg 关联testNg -->
		<dependency>
			<groupId>org.uncommons</groupId>
			<artifactId>reportng</artifactId>
			<version>1.1.4</version>
			<scope>test</scope>
			<!-- 此处排除了testng,因为reportNg中本身就有testng的jar包依赖 -->
			<exclusions>
				<exclusion>
					<groupId>org.testng</groupId>
					<artifactId>testng</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- 要注意的一点是还需加入guice这个包，否则在执行mvn test的时候会编译不通过，报ClassNotFoundException -->
		<dependency>
			<groupId>com.google.inject</groupId>
			<artifactId>guice</artifactId>
			<version>4.1.0</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<!-- 添加插件maven-surefire-plugin(用来在maven构建生命周期的test phase执行一个应用的单元测试), 
				关联testNg.xml,添加ReportNg的监听器，修改最后的TestNg的报告 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<suiteXmlFiles>
						<!-- <suiteXmlFile>res/${xmlFileName}</suiteXmlFile> -->
						<suiteXmlFile>res/testng.xml</suiteXmlFile>
					</suiteXmlFiles>
					<!-- <systemPropertyVariables>标签设置为false为了让log中的html在页面上正常显示,避免直接显示为html字符串 -->
					<systemPropertyVariables>
						<org.uncommons.reportng.escape-output>false</org.uncommons.reportng.escape-output>
					</systemPropertyVariables>
					<testFailureIgnore>true</testFailureIgnore>
				</configuration>
			</plugin>
			<!-- 添加插件,添加ReportNg的监听器，修改最后的TestNg的报告 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.20</version>
				<configuration>
					<!-- 打包的时候忽略测试代码 -->
					<skipTests>false</skipTests>
					<properties>
						<property>
							<!-- 使用reportNG的报告 -->
							<name>usedefaultlisteners</name>
							<value>false</value>
						</property>
						<property>
							<name>listener</name>
							<!-- JUnitXMLReporter，这个是用来生成xml格式的report，用于jekins服务器 -->
							<value>org.uncommons.reportng.HTMLReporter,org.uncommons.reportng.JUnitXMLReporter</value>
						</property>
					</properties>
					<workingDirectory>target/</workingDirectory>
					<!--报告生成之后会在maven项目的target路径下面，打开index.html就可以查看 -->
					<forkMode>always</forkMode><!--生成规则 -->
					<!-- 解决控制台输出乱码问题 -->
					<argLine>-Dfile.encoding=UTF-8</argLine>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
